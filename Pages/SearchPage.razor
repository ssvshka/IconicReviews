@inject SearchService searchService
@page "/Search/{searchedText}"
@inject IStringLocalizer<App> Localizer

@if(reviews is null)
{
    <MudText Class="pa-4">@Localizer["Loading..."]</MudText>
}
else if (reviews.Count < 1)
{
    <MudText Class="pa-4">@Localizer["No results found!"]</MudText>
}
else
{
    <MudItem xs="12">
        <MudTable Items="reviews">
            <RowTemplate>
                <MudTd><MudLink Href="@($"/Review/{context.Id}")">@context.Title</MudLink></MudTd>
                <MudTd><MudMarkdown Value="@GetTextPart(context.Text)" /></MudTd>
            </RowTemplate>
        </MudTable>
    </MudItem>
}

@code {
    [Parameter]
    public string? searchedText { get; set; }
    private List<Review> reviews = default!;
    private int textPart = 50;

    protected override async Task OnParametersSetAsync()
        => reviews = await searchService.Search(searchedText!);

    private string GetTextPart(string text)
    {
        if (text.Length >= textPart)
            return $"{text.Substring(0, textPart)}...";
        else return text;
    }
}
